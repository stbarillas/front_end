{"version":3,"sources":["static/test/css_sprites.png","components/lists.js","components/cards.js","tasks/queue.js","pages/homepage.js","components/snackbar.js","components/inputs.js","pages/user_settings.js","pages/register.js","components/login.js","components/headers.js","pages/edit_instrument.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","SimpleList","props","classes","react_default","a","createElement","className","List","component","aria-label","data","map","queueEntry","i","ListItem","button","ListItemText","primary","display_name","InstrumentCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","queue","userJoined","updateQueueState","_this2","Promise","resolve","reject","isoDate","Date","toISOString","user_id","sessionStorage","getItem","user","user_pk","instrument_pk","id","created_date","ownership_date","fetch","method","body","JSON","stringify","headers","Content-Type","Authorization","then","res","json","response","console","log","catch","error","_this3","ok","Error","status","filter","listEntry","userId","String","instrumentId","indexOf","entry","_this4","filteredChecklist","setState","userPk","currentUserId","length","button_one","edit_button","_this5","is_auth","alreadyJoined","opts","Button","assign","size","color","react_router_dom","to","pathname","style","textDecoration","onClick","handleLeaveQueue","handleJoinQueue","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","instrument_name","CardMedia","image","instrument_image","title","height","lists","CardActions","React","Component","Homepage","placeholder","apiInstrumentCall","updateInstruments","err","Grid","container","spacing","instruments","instrument","item","components_cards","close","padding","SimpleSnackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","ContentProps","aria-describedby","message","action","IconButton","key","Close_default","display","flexWrap","textField","marginLeft","marginRight","dense","marginTop","menu","TextFields","userData","_React$useState","useState","firstName","lastName","email","_React$useState2","slicedToArray","values","setValues","_React$useState3","_React$useState4","setOpen","handleChange","name","event","objectSpread","defineProperty","target","value","noValidate","autoComplete","onSubmit","submitData","first_name","last_name","setItem","preventDefault","TextField","label","onChange","margin","type","reason","RegisterFields","_React$useState5","username","password","_React$useState6","_React$useState7","_React$useState8","EditInstrumentFields","_React$useState9","instrument_type","instrument_status","ip_address","ip_address_2","instrument_connection","instrument_detector_1","instrument_detector_2","instrument_detector_3","instrument_sampler_1","instrument_sampler_2","instrument_pump","instrument_column_compartment","_React$useState10","_React$useState11","_React$useState12","url","UserSettings","output","split","updateUserData","Register","Login","on_login","grow","flexGrow","menuButton","breakpoints","up","search","position","borderRadius","shape","fade","common","white","&:hover","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","renderAppButtons","menuId","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","on_logout","renderMobileMenu","Badge","badgeContent","Add_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","edge","login","AppBar","Toolbar","noWrap","Search_default","InputBase","input","inputProps","handleSearch","MoreVert_default","EditInstrument","location","App","auth","searchInput","clear","filteredInstruments","instrumentName","handleLogin","handleLogout","handleSearchInput","react_router","exact","path","render","homepage","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4b17bb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/css_sprites.f61be052.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n// function ListItemLink(props) {\n//     return <ListItem button component=\"a\" {...props} />;\n// }\n\nfunction SimpleList(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"Main mailbox folders\">\n                {props.data.map((queueEntry, i )=>{return (\n                    <ListItem button>\n                        <ListItemText primary={ (i + 1) + '. ' + queueEntry.display_name} />\n                    </ListItem>\n                )})}\n\n            </List>\n        </div>\n    );\n}\n\n\nexport default SimpleList","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {joinQueue, leaveQueue} from '../tasks/queue'\nimport SimpleList from './lists'\nimport './cards.css'\nimport {Link} from \"react-router-dom\";\n\n\n\nclass InstrumentCard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            queue: [],\n            userJoined: false,\n        }\n    }\n    componentWillMount(){this.updateQueueState()}\n\n    handleJoinQueue() {\n        joinQueue(this.props).then(() => {this.updateQueueState()});\n    }\n\n    handleLeaveQueue() {\n        leaveQueue(this.props).then(()=>{this.updateQueueState()});\n    }\n\n    updateQueueState() {\n        const url = 'http://127.0.0.1:8000/checklist/';\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + sessionStorage.getItem('token')\n            }\n        })\n        // If response is ok, translate to json. Otherwise, throw Error\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                } else {\n                    throw new Error(response.status);\n                }\n            })\n            .then(response => {\n                // Loop through queue and return entries for current instrument only\n                let filteredChecklist = response.filter(\n                    (listEntry) => {\n                        const instrumentId = listEntry.instrument_pk;\n\n                        // Only returns checklist entries that match instrument pk exactly\n                        return instrumentId === this.props.data.id;\n                    });\n                this.setState({queue: filteredChecklist})\n                return filteredChecklist\n            })\n            .then(response => {\n                let filteredChecklist = response.filter(\n                    (listEntry) => {\n                        const userPk = String(listEntry.user_pk),\n                        currentUserId = sessionStorage.getItem('user_id');\n                        // Only returns checklist entries that match user pk\n                        return userPk.indexOf(currentUserId) !== -1;\n                    });\n                // If current user is present in queue, set userJoined to true\n                if(filteredChecklist.length !==0) {\n                    this.setState({userJoined: true})\n                // If current user is not in queue, set userJoined to false\n                } else {\n                    this.setState({userJoined: false})\n                }\n            })\n            .catch(error => console.error('API error:', error));\n    }\n\n    render () {\n        const is_auth = this.props.is_auth,\n        alreadyJoined = this.state.userJoined;\n        let opts = {},\n        button_one, edit_button;\n\n\n\n        // If not authenticated, disabled is added to dynamic attribute\n        if (!is_auth) {\n            opts['disabled'] = 'disabled';\n        }\n\n        edit_button = (\n            <Button size=\"small\" color=\"primary\" {...opts}>\n                <Link\n                    to={{\n                        pathname: \"/edit_instrument\",\n                        state: { data: this.props.data }\n                    }}\n                    style={{ textDecoration: 'none', color:'inherit' }}\n                >Edit </Link>\n            </Button>\n        )\n\n        if (alreadyJoined) {\n            button_one = (\n                <Button size=\"small\" color=\"primary\" {...opts} onClick={() => this.handleLeaveQueue()}>\n                    Leave Waitlist\n                </Button>\n            );\n\n        }else {\n            button_one = (\n                <Button size=\"small\" color=\"primary\" {...opts} onClick={() => this.handleJoinQueue()}>\n                    Join Waitlist\n                </Button>\n            )\n        }\n\n        return (\n            <Card>\n                <CardActionArea>\n                    <CardContent>\n                        {this.state.queue.length===0 ?\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={'available'}>\n                                {this.props.data.instrument_name}\n                            </Typography>\n                            : <Typography gutterBottom variant=\"h5\" component=\"h2\" className={'inuse'}>\n                                {this.props.data.instrument_name}\n                            </Typography>\n                        }\n\n                    </CardContent>\n                    {this.state.queue.length===0 ?\n                        <CardMedia\n                            image={this.props.data.instrument_image}\n                            title=\"Hello World\" style={{\"height\" : \"200px\"}}\n                        />\n                        : <SimpleList data={this.state.queue}/>\n                    }\n                </CardActionArea>\n                <CardActions>\n                    {button_one}\n                    {edit_button}\n                </CardActions>\n\n            </Card>\n        )\n    };\n}\n\nexport default (InstrumentCard);","const joinQueue = function(props) {\n    return new Promise(function(resolve, reject) {\n        const url = 'http://127.0.0.1:8000/checklist/',\n            isoDate = new Date().toISOString(),\n            user_id = sessionStorage.getItem('user_id'),\n            full_name = sessionStorage.getItem('full_name');\n        const data = {\n            \"user\": 'http://127.0.0.1:8000/users/' + user_id + '/',\n            \"user_pk\": user_id,\n            \"display_name\": full_name,\n            \"instrument_pk\": props.data.id,\n            \"created_date\": isoDate,\n            \"ownership_date\": isoDate,\n        }\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + sessionStorage.getItem('token')\n            }\n        })\n            .then(res => res.json())\n            .then(response => {\n                resolve(console.log('Success:', JSON.stringify(response)))\n            })\n            .catch(error => (console.error('Error Posting Checklist:', error)));\n    })\n}\n\nconst leaveQueue = function(props) {\n    return new Promise(function(resolve, reject) {\n        const url = 'http://127.0.0.1:8000/checklist/';\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + sessionStorage.getItem('token')\n            }\n        })\n        // If response is ok, translate to json. Otherwise, throw Error\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                } else {\n                    throw new Error(response.status);\n                }\n            })\n            .then(response => {\n                let filteredChecklist = response.filter(\n                    (listEntry) => {\n                        const userId = String(listEntry.user_pk),\n                            instrumentId = String(listEntry.instrument_pk);\n                        // Only returns checklist entries that match user pk and instrument pk\n                        return userId.indexOf(sessionStorage.getItem('user_id')) !== -1 &&\n                            instrumentId.indexOf(props.data.id) !== -1;\n                    })\n                return filteredChecklist\n            })\n            .then(entry => {\n                const id = entry[0].id,\n                    url = 'http://127.0.0.1:8000/checklist/' + id + '/';\n                fetch(url, {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Token ' + sessionStorage.getItem('token')\n                    }\n                })\n                // If response is ok, translate to json. Otherwise, throw Error\n                    .then(response => {\n                        if (response.ok) {\n                            resolve(console.log('Success:', JSON.stringify(response)));\n                        } else {\n                            throw new Error(response.status);\n                        }\n                    })\n                    .catch(error => console.error('API error:', error));\n\n            })\n            .catch(error => console.error('API error:', error));\n    })\n\n}\n\nfunction getQueue(props) {\n    const url = 'http://127.0.0.1:8000/checklist/';\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + sessionStorage.getItem('token')\n        }\n    })\n    // If response is ok, translate to json. Otherwise, throw Error\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            } else {\n                throw new Error(response.status);\n            }\n        })\n        .then(response => {\n            let filteredChecklist = response.filter(\n                (listEntry) => {\n                    const userId = String(listEntry.user_pk),\n                        instrumentId = String(listEntry.instrument_pk);\n                    // Only returns checklist entries that match user pk and instrument pk\n                    return userId.indexOf(sessionStorage.getItem('user_id')) !== -1 &&\n                        instrumentId.indexOf(props.data.id) !== -1;\n                })\n            return filteredChecklist\n        })\n        .catch(error => console.error('API error:', error));\n}\n\nexport {joinQueue, leaveQueue, getQueue}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InstrumentCard from \"../components/cards\";\nimport logo from \"../static/test/css_sprites.png\"\n\nclass Homepage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            placeholder: [],\n        }\n    }\n\n    componentDidMount() {\n        this.apiInstrumentCall()\n    }\n\n    // Fetches API data\n    apiInstrumentCall() {\n        // API call function\n        fetch('http://127.0.0.1:8000/instruments/?format=json')\n        // Converts API response to json\n            .then((response) => {\n                return response.json();\n            })\n            // Extracts and saves data to app state under 'instruments'\n            .then((data) => {\n                // this.updateInstruments(data)\n                this.props.updateInstruments(data)\n            })\n            // Displays error if API call is unsuccessful\n            .catch((err) => {\n                console.log(\"API fetch was unsuccessful\");\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container spacing={3}>\n                    {this.props.instruments.map((instrument)=>{\n                        return (\n                            <Grid item>\n                                <InstrumentCard data={instrument} is_auth={this.props.is_auth} />\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </div>\n        );\n    }\n}\nexport default Homepage","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    close: {\n        padding: theme.spacing(0.5),\n    },\n}));\n\nfunction SimpleSnackbar(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={props.open}\n                autoHideDuration={6000}\n                onClose={props.handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Data Saved</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.handleClose}\n                    >\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    );\n}\n\nexport {SimpleSnackbar}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {SimpleSnackbar} from './snackbar'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    close: {\n        padding: theme.spacing(0.5),\n    },\n}));\n\nfunction TextFields(props) {\n    const classes = useStyles();\n    const data = props.userData[0];\n    const [values, setValues] = React.useState({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        email: data.email,\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = name => event => {\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    const handleSubmit = event => {\n        const id = sessionStorage.getItem('user_id'),\n            submitData = {\n                'first_name': values.firstName,\n                'last_name' : values.lastName,\n                'email' : values.email,\n            },\n            url = 'http://127.0.0.1:8000/users/' + id +'/';\n        fetch(url, {\n            method: 'PATCH', // or 'PUT'\n            body: JSON.stringify(submitData), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + sessionStorage.getItem('token')\n            }\n        })\n            .then(res => {\n                if(res.ok){\n                    console.log('user database entry update successful')\n                    return res.json\n                } else {\n                    throw new Error(res.status);\n                }\n            })\n            .then(response => {\n                // Saves token to sessionStorage & passes up auth state to trigger rerender\n                if (sessionStorage) {\n                    sessionStorage.setItem('full_name', values.firstName + ' ' + values.lastName);\n                    sessionStorage.setItem('email', values.email);\n                    console.log('user sessionStorage update successful')\n                    setOpen(true);\n                }\n            })\n            .catch(error => console.error('API error:', error));\n        event.preventDefault();\n    }\n\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                    id=\"standard-name\"\n                    label=\"First Name\"\n                    className={classes.textField}\n                    value={values.firstName}\n                    onChange={handleChange('firstName')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Last Name\"\n                    className={classes.textField}\n                    value={values.lastName}\n                    onChange={handleChange('lastName')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    value={values.email}\n                    onChange={handleChange('email')}\n                    margin=\"normal\"\n                />\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            <SimpleSnackbar open={open} handleClose={()=>handleClose()}/>\n        </div>\n    );\n}\n\nfunction RegisterFields() {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        username: '',\n        password: '',\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = name => event => {\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    const handleSubmit = event => {\n        const submitData = {\n            'first_name': values.firstName,\n            'last_name' : values.lastName,\n            'email' : values.email,\n            'username' : values.username,\n            'password': values.password\n        },\n        url = 'http://127.0.0.1:8000/users/';\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(submitData), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => {\n                if(res.ok){\n                    console.log('user created in database')\n                    setOpen(true);\n                    return res.json\n                } else {\n                    throw new Error(res.status);\n                }\n            })\n            .catch(error => console.error('API error:', error));\n        event.preventDefault();\n    }\n\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Username\"\n                    className={classes.textField}\n                    value={values.username}\n                    onChange={handleChange('username')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Password\"\n                    className={classes.textField}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"First Name\"\n                    className={classes.textField}\n                    value={values.firstName}\n                    onChange={handleChange('firstName')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Last Name\"\n                    className={classes.textField}\n                    value={values.lastName}\n                    onChange={handleChange('lastName')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    value={values.email}\n                    onChange={handleChange('email')}\n                    margin=\"normal\"\n                />\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            <SimpleSnackbar open={open} handleClose={()=>handleClose()}/>\n        </div>\n    );\n}\n\nfunction EditInstrumentFields(props) {\n    let data = props.data\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        instrument_type : data.instrument_type,\n        instrument_status : data.instrument_status,\n        ip_address : data.ip_address,\n        ip_address_2 : data.ip_address_2,\n        instrument_name : data.instrument_name,\n        instrument_connection : data.instrument_connection,\n        instrument_detector_1 : data.instrument_detector_1,\n        instrument_detector_2 : data.instrument_detector_2,\n        instrument_detector_3 : data.instrument_detector_3,\n        instrument_sampler_1 : data.instrument_sampler_1,\n        instrument_sampler_2 : data.instrument_sampler_2,\n        instrument_pump : data.instrument_pump,\n        instrument_column_compartment : data.instrument_column_compartment,\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = name => event => {\n        setValues({ ...values, [name]: event.target.value });\n    };\n\n    const handleSubmit = event => {\n        const  submitData = {\n                'instrument_type' : values.instrument_type,\n                'instrument_status' :values.instrument_status,\n                'ip_address' : values.ip_address,\n                'ip_address_2' :values.ip_address_2,\n                'instrument_name' :values.instrument_name,\n                'instrument_connection' : values.instrument_connection,\n                'instrument_detector_1' : values.instrument_detector_1,\n                'instrument_detector_2' : values.instrument_detector_2,\n                'instrument_detector_3' : values.instrument_detector_3,\n                'instrument_sampler_1' : values.instrument_sampler_1,\n                'instrument_sampler_2' : values.instrument_sampler_2,\n                'instrument_pump' : values.instrument_pump,\n                'instrument_column_compartment' : values.instrument_column_compartment,\n            },\n            url = 'http://127.0.0.1:8000/instruments/' + data.id + '/';\n        console.log(submitData)\n        fetch(url, {\n            method: 'PATCH', // or 'PUT'\n            body: JSON.stringify(submitData), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Token ' + sessionStorage.getItem('token')\n            }\n        })\n            .then(res => {\n                if(res.ok){\n                    console.log('user database entry update successful')\n                    return res.json\n                } else {\n                    throw new Error(res.status);\n                }\n            })\n            .then(response => {\n                console.log('Instrument update successful');\n                setOpen(true);\n                }\n            )\n            .catch(error => console.error('API error:', error));\n        event.preventDefault();\n    }\n\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_type\"\n                    className={classes.textField}\n                    value={values.instrument_type}\n                    onChange={handleChange('instrument_type')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_status\"\n                    className={classes.textField}\n                    value={values.instrument_status}\n                    onChange={handleChange('instrument_status')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"ip_address\"\n                    className={classes.textField}\n                    value={values.ip_address}\n                    onChange={handleChange('ip_address')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"ip_address_2\"\n                    className={classes.textField}\n                    value={values.ip_address_2}\n                    onChange={handleChange('ip_address_2')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_name\"\n                    className={classes.textField}\n                    value={values.instrument_name}\n                    onChange={handleChange('instrument_name')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_connection\"\n                    className={classes.textField}\n                    value={values.instrument_connection}\n                    onChange={handleChange('instrument_connection')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_detector_1\"\n                    className={classes.textField}\n                    value={values.instrument_detector_1}\n                    onChange={handleChange('instrument_detector_1')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_detector_2\"\n                    className={classes.textField}\n                    value={values.instrument_detector_2}\n                    onChange={handleChange('instrument_detector_2')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_detector_3\"\n                    className={classes.textField}\n                    value={values.instrument_detector_3}\n                    onChange={handleChange('instrument_detector_3')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_sampler_1\"\n                    className={classes.textField}\n                    value={values.instrument_sampler_1}\n                    onChange={handleChange('instrument_sampler_1')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_sampler_2\"\n                    className={classes.textField}\n                    value={values.instrument_sampler_2}\n                    onChange={handleChange('instrument_sampler_2')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_pump\"\n                    className={classes.textField}\n                    value={values.instrument_pump}\n                    onChange={handleChange('instrument_pump')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-name\"\n                    label=\"instrument_column_compartment\"\n                    className={classes.textField}\n                    value={values.instrument_column_compartment}\n                    onChange={handleChange('instrument_column_compartment')}\n                    margin=\"normal\"\n                />\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            <SimpleSnackbar open={open} handleClose={()=>handleClose()}/>\n        </div>\n    );\n}\n\nexport {TextFields, RegisterFields, EditInstrumentFields}\n\n","import React from \"react\";\nimport {TextFields} from \"../components/inputs.js\"\n\nclass UserSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [],\n        }\n    }\n\n    updateUserData(){\n        let name  = sessionStorage.getItem('full_name'),\n            firstName = name.split(' ')[0],\n            lastName = name.split(' ')[1],\n            email = sessionStorage.getItem('email'),\n            output = [\n                {'firstName':firstName, 'lastName':lastName, 'email':email}\n            ];\n        this.setState({userData: output})\n    }\n\n    componentWillMount() {\n        this.updateUserData();\n    }\n\n    render() {\n        return (\n            <TextFields userData={this.state.userData}/>\n        );\n    }\n}\nexport default UserSettings","import React from \"react\";\nimport {RegisterFields} from \"../components/inputs.js\"\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [],\n        }\n    }\n\n    render() {\n        return (\n            <RegisterFields userData={this.state.userData}/>\n        );\n    }\n}\nexport default Register","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 150,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n    close: {\n        padding: theme.spacing(0.5),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction Login(props) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        username: '',\n        password: '',\n    });\n\n    const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n    };\n\n    function handleSubmit(event) {\n        const url = 'http://127.0.0.1:8000/api-token-auth/';\n        var data = {\n            \"username\": values.username,\n            \"password\": values.password,\n        }\n        fetch(url, {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(data), // data can be `string` or {object}!\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        // If response is ok, translate to json. Otherwise, throw Error\n            .then(res => {\n                if(res.ok){\n                    return res.json()\n                } else {\n                    throw new Error(res.status);\n                }\n            })\n            .then(response => {\n                // Saves token to sessionStorage & passes up auth state to trigger rerender\n                console.log(response)\n                if (sessionStorage) {\n                    sessionStorage.setItem('token', response['token']);\n                    sessionStorage.setItem('user_id', response['user_id']);\n                    sessionStorage.setItem('username', values.username)\n                    sessionStorage.setItem('full_name', response['full_name']);\n                    sessionStorage.setItem('email', response['email']);\n                    props.on_login();\n                }\n            })\n            .catch(error => console.error('API error:', error));\n        event.preventDefault();\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                id=\"standard-name\"\n                className={classes.textField}\n                label=\"username\"\n                value={values.username}\n                onChange={handleChange('username')}\n                margin=\"normal\"\n            />\n            <TextField\n                id=\"standard-name\"\n                className={classes.textField}\n                label=\"password\"\n                value={values.password}\n                onChange={handleChange('password')}\n                margin=\"normal\"\n            />\n            <Button variant=\"contained\" className={classes.button} type='submit'>\n                Login\n            </Button>\n            <Button variant=\"contained\" className={classes.button}>\n                <Link to=\"/register\">register</Link>\n            </Button>\n        </form>\n    );\n}\n\nexport default Login","import Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport Login from \"./login\";\n\nimport React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    function handleProfileMenuOpen(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleMobileMenuClose() {\n        setMobileMoreAnchorEl(null);\n    }\n\n    function handleMenuClose() {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    }\n\n    function handleMobileMenuOpen(event) {\n        setMobileMoreAnchorEl(event.currentTarget);\n    }\n    function handleLogout() {\n        handleMenuClose();\n        props.on_logout()\n    }\n    function handleSearch(event) {\n        console.log(event.target.value)\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            {/*<MenuItem onClick={handleMenuClose}>Profile</MenuItem>*/}\n            <Link to=\"/usersettings\">\n                <MenuItem  onClick={handleMenuClose}> Profile </MenuItem>\n            </Link>\n            {/*<MenuItem onClick={handleMenuClose}>My account</MenuItem>*/}\n            <MenuItem onClick={handleLogout}>\n                Logout\n            </MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"Show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <AddIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"Show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"Account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    let renderAppButtons;\n    if (props.is_auth) {\n        renderAppButtons = (\n            <span>\n                <IconButton aria-label=\"Add Instrument Button\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <AddIcon />\n                    </Badge>\n                </IconButton>\n                <IconButton aria-label=\"Show 17 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <IconButton\n                    edge=\"end\"\n                    aria-label=\"Account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    onClick={handleProfileMenuOpen}\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n            </span>\n        )\n    }else {\n        renderAppButtons = (\n            <span>\n                <Login on_login={()=>props.on_login()}/>\n            </span>\n        )\n    }\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        <Link to=\"/\">\n                            Instrument-Queue\n                        </Link>\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Filter…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'Search' }}\n                            onChange={props.handleSearch}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                    {renderAppButtons}\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"Show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from \"react\";\nimport {EditInstrumentFields} from \"../components/inputs.js\"\n\nclass EditInstrument extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [],\n        }\n    }\n\n    render() {\n        return (\n            <EditInstrumentFields data={this.props.location.state.data}/>\n        );\n    }\n}\nexport default EditInstrument","import React from 'react';\nimport './App.css';\nimport Homepage from './pages/homepage'\nimport UserSettings from './pages/user_settings'\nimport Register from './pages/register'\n// import EditInstrument from './pages/edit_instrument'\nimport ButtonAppBar from './components/headers'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport EditInstrument from \"./pages/edit_instrument\";\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            auth: false,\n            instruments: [],\n            searchInput: '',\n        };\n    }\n    handleLogin() {\n        this.setState({auth: true});\n    }\n    handleLogout() {\n        this.setState({auth:false});\n        sessionStorage.clear();\n    }\n    componentWillMount() {\n        if (sessionStorage.getItem('token')){\n            this.setState({auth: true});\n        }\n    }\n    updateInstruments(data) {\n        const instruments = data;\n        this.setState({instruments: instruments})\n    }\n    handleSearchInput(event) {\n        this.setState({searchInput: event.target.value})\n    }\n\n    render(){\n        let filteredInstruments = this.state.instruments.filter(\n            (listEntry) => {\n                const instrumentName = listEntry.instrument_name,\n                    searchInput = this.state.searchInput;\n                // Only returns checklist entries that match user pk\n                return instrumentName.indexOf(searchInput) !== -1;\n            });\n        return (\n            <Router>\n                <div>\n                    <ButtonAppBar\n                        on_login={()=>this.handleLogin()}\n                        on_logout={()=> this.handleLogout()}\n                        is_auth={this.state.auth}\n                        handleSearch={(event)=>this.handleSearchInput(event)}\n                    />\n                    <Route\n                        exact path=\"/\"\n                        render={(props) =>\n                            <Homepage\n                                is_auth={this.state.auth}\n                                instruments={filteredInstruments}\n                                updateInstruments={(data)=>this.updateInstruments(data)}\n                            />}\n                    />\n                    <Route path=\"/usersettings\" component={UserSettings}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/edit_instrument\" component={EditInstrument}/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}